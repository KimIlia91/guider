<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Guider.WebApi</name>
    </assembly>
    <members>
        <member name="T:Guider.Common.Cors.CorsConfig">
            <summary>
            CORS configuration
            </summary>
        </member>
        <member name="M:Guider.Common.Cors.CorsConfig.AddCorsPolicy(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add cors config extension method
            </summary>
        </member>
        <member name="T:Guider.Common.Options.ApiOptions">
            <summary>
            API options
            </summary>
        </member>
        <member name="P:Guider.Common.Options.ApiOptions.Name">
            <summary>
            API name
            </summary>
        </member>
        <member name="P:Guider.Common.Options.ApiOptions.Version">
            <summary>
            API version
            </summary>
        </member>
        <member name="T:Guider.Common.Options.CorsOptions">
            <summary>
            CORS options
            </summary>
        </member>
        <member name="P:Guider.Common.Options.CorsOptions.AllowedHosts">
            <summary>
            Allowed hosts
            </summary>
        </member>
        <member name="P:Guider.Common.Options.CorsOptions.AllowedHeaders">
            <summary>
            Allowed headers
            </summary>
        </member>
        <member name="T:Guider.Controllers.ApiController">
            <summary>
            Base API controller
            </summary>
            <param name="mediatr">Mediatr service</param>
        </member>
        <member name="M:Guider.Controllers.ApiController.#ctor(MediatR.ISender)">
            <summary>
            Base API controller
            </summary>
            <param name="mediatr">Mediatr service</param>
        </member>
        <member name="P:Guider.Controllers.ApiController.Mediatr">
            <summary>
            Mediatr property
            </summary>
        </member>
        <member name="M:Guider.Controllers.ApiController.Problem(System.Collections.Generic.List{ErrorOr.Error})">
            <summary>
            For errors in app
            </summary>
            <param name="errors">Errors list</param>
            <returns>Problem response</returns>
        </member>
        <member name="T:Guider.Controllers.CategoryController">
            <summary>
            Category controller
            </summary>
        </member>
        <member name="M:Guider.Controllers.CategoryController.#ctor(MediatR.ISender)">
            <summary>
            Category controller
            </summary>
        </member>
        <member name="M:Guider.Controllers.CategoryController.CreateCategory(Guider.Common.Models.Categories.CreateCategoryRequest,System.Threading.CancellationToken)">
            <summary>
            Create new category
            </summary>
            <param name="request">CreateCategoryRequest DTO model</param>
            <param name="cancellationToken">Token to cancel operation</param>
            <returns>CategoryResult DTO model</returns>
        </member>
        <member name="M:Guider.Controllers.CategoryController.UpdateCategory(Guider.Common.Models.Categories.UpdateCategoryRequest,System.Threading.CancellationToken)">
            <summary>
            Update category
            </summary>
            <param name="request">UpdateCategoryRequest DTO model</param>
            <param name="cancellationToken">Token to cancel operation</param>
            <returns>CategoryResult DTO model</returns>
        </member>
        <member name="M:Guider.Controllers.CategoryController.GetCategories(System.Threading.CancellationToken)">
            <summary>
            Get all categories
            </summary>
            <param name="cancellationToken">Token to cancel operation</param>
            <returns>List of CategoryResult DTO models</returns>
        </member>
        <member name="M:Guider.Controllers.CategoryController.GetCategory(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get category by id
            </summary>
            <param name="id">ID of category to return</param>
            <param name="cancellationToken">Token to cancel operation</param>
            <returns>CategoryResult DTO model</returns>
        </member>
        <member name="M:Guider.Controllers.CategoryController.DeleteCategory(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete category by id
            </summary>
            <param name="id">ID of category to delete</param>
            <param name="cancellationToken">Token to cancel operation</param>
        </member>
        <member name="T:Guider.Controllers.ErrorController">
            <summary>
            Controller for handling error responses.
            </summary>
            <param name="mediatr">MediatR service for handling requests.</param>
            <param name="contextAccessor">Accesses the HTTP context.</param>
        </member>
        <member name="M:Guider.Controllers.ErrorController.#ctor(MediatR.ISender,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Controller for handling error responses.
            </summary>
            <param name="mediatr">MediatR service for handling requests.</param>
            <param name="contextAccessor">Accesses the HTTP context.</param>
        </member>
        <member name="M:Guider.Controllers.ErrorController.Error">
            <summary>
            Returns a Problem Details response with error information.
            </summary>
            <returns>A Problem Details response.</returns>
        </member>
    </members>
</doc>
